ToDo list





















//////////////////////////////////////////////////

#if 0
// old breadboard keyboard stuff - may need again someday
int debounceLoops = 25;
int checkButtonFrequency = 120;
int debounceCount = 0;
char lastHandledButton = 'X';


char read_buttons()
{
	int btn = analogRead(0);      // read the value from the sensor
	return	btn > 1000 ? ' ' :
		btn < 50 ? 'E' :
		btn < 250 ? 'D' :
		btn < 450 ? 'C' :
		btn < 650 ? 'B' :
		btn < 850 ? 'A' :
		' ';  // when all others fail, return this...
}

#if 0
Serial.write("// please close the AVR serial\r\n");

Serial.write("// then press 'select' to start\r\n");
while (true)
{
	if (read_buttons() == 'A')
		break;
	toggle(LED);
	delay(100);
}
delay(500);
#endif
char btn = 'Z';
void CheckButtons()
{
	int p;

	if (btn == 'Z')
		btn = 'A';
	else if (btn == 'A')
	{
		SetPower(M1, 50);
		btn = 'X';
	}


	//btn = read_buttons();

	//if (--debounceCount > 0)
	//	return;

	lastHandledButton = btn;

	switch (btn)
	{
	case 'A':
		escEnabled = !escEnabled;
		digitalWrite(ESC_EN, escEnabled);
		Serial.write(escEnabled ? "Enabled" : "Disabled");
		debounceCount = debounceLoops;
		break;
	case 'B':	// instant reverse
		p = -M1.power;
		SetPower(M2, p);
		debounceCount = debounceLoops;
		break;
	case 'E':	// not used
		debounceCount = debounceLoops;
		break;
	case 'D':	// up
		p = M1.power + (SignOf(M1.power) * 5);
		if (p > 100) p = 100;
		SetPower(M2, p);
		debounceCount = debounceLoops;
		break;
	case 'C':	// down
		p = M1.power + (-SignOf(M1.power) * 5);
		if (p < -100) p = -100;
		SetPower(M2, p);
		debounceCount = debounceLoops;
		break;
	}
}

if (cntr % checkButtonFrequency == 0)
CheckButtons();

#endif